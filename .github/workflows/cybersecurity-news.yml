name: Cybersecurity News Parser

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update-news:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install feedparser python-dateutil requests beautifulsoup4

      - name: Run news parser
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import feedparser
            import datetime
            import re
            from dateutil import parser as date_parser
            from bs4 import BeautifulSoup
            import html
            
            # Custom topics with their descriptions
            topics = {
                'Critical Infrastructure': {
                    'url': 'https://news.google.com/rss/search?q=critical+infrastructure&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'News about cybersecurity threats and incidents affecting critical infrastructure sectors.'
                },
                'China Cyber': {
                    'url': 'https://news.google.com/rss/search?q=china+cyber+attack&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'News about cyber threats, attacks, and activities attributed to China.'
                },
                'Russian Cyber': {
                    'url': 'https://news.google.com/rss/search?q=russia+cyber+attack&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Coverage of cyber operations, attacks, and threats linked to Russia.'
                },
                'Iranian Cyber': {
                    'url': 'https://news.google.com/rss/search?q=iran+cyber+attack&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Reports on cyber activities and operations attributed to Iran.'
                },
                'North Korean Cyber': {
                    'url': 'https://news.google.com/rss/search?q=north+korea+cyber&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Coverage of cyber operations and threats attributed to North Korea.'
                },
                'CVEs': {
                    'url': 'https://news.google.com/rss/search?q=cve+vulnerability&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Latest Common Vulnerabilities and Exposures (CVEs) affecting various systems and software.'
                },
                'POC Exploits': {
                    'url': 'https://news.google.com/rss/search?q=proof+of+concept+exploit&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Information about newly released proof-of-concept exploits for vulnerabilities.'
                },
                'Exploited Vulnerabilities': {
                    'url': 'https://news.google.com/rss/search?q=exploited+vulnerability&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'News about vulnerabilities actively being exploited in the wild.'
                },
                'Satellites': {
                    'url': 'https://news.google.com/rss/search?q=satellite+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cybersecurity concerns, threats, and protections for satellite infrastructure.'
                },
                'Cyber Attacks': {
                    'url': 'https://news.google.com/rss/search?q=major+cyber+attack&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Major cyber attacks against organizations, governments, and infrastructure.'
                },
                'Crypto Security': {
                    'url': 'https://news.google.com/rss/search?q=cryptocurrency+security&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Security issues, threats, and protections related to cryptocurrency.'
                },
                'Quantum Computing': {
                    'url': 'https://news.google.com/rss/search?q=quantum+computing+security&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Developments in quantum computing and its implications for cybersecurity.'
                },
                'Espionage': {
                    'url': 'https://news.google.com/rss/search?q=cyber+espionage&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'News about cyber espionage campaigns, operations, and threats.'
                },
                'Drone Security': {
                    'url': 'https://news.google.com/rss/search?q=drone+cybersecurity+threats&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Coverage of cybersecurity threats related to drones, UAVs, and counter-drone technologies.'
                },
                'Asymmetric Warfare': {
                    'url': 'https://news.google.com/rss/search?q=asymmetric+cyber+warfare&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'News about asymmetric cyber warfare tactics, strategies, and incidents.'
                },
                'Financial Times': {
                    'url': 'https://news.google.com/rss/search?q=ft.com+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cybersecurity news and analysis from the Financial Times, offering business and economic perspectives.'
                },
                'Politico': {
                    'url': 'https://news.google.com/rss/search?q=politico.com+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Political and policy perspectives on cybersecurity from Politico.'
                },
                'Wired': {
                    'url': 'https://news.google.com/rss/search?q=wired.com+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'In-depth technology and cybersecurity reporting from Wired.'
                },
                'Reuters': {
                    'url': 'https://news.google.com/rss/search?q=reuters.com+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Breaking cybersecurity news and developments from Reuters global news service.'
                },
                'Wall Street Journal': {
                    'url': 'https://news.google.com/rss/search?q=wsj.com+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Business-focused cybersecurity news and analysis from the Wall Street Journal.'
                },
                'GBHackers': {
                    'url': 'https://news.google.com/rss/search?q=gbhackers.com&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Technical cybersecurity news, vulnerability reports, and threat intelligence from GBHackers.'
                },
                'The Record': {
                    'url': 'https://news.google.com/rss/search?q=therecord.media&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cybersecurity reporting from The Record by Recorded Future.'
                },
                'The Hacker News': {
                    'url': 'https://news.google.com/rss/search?q=thehackernews.com&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Latest cybersecurity news, exploits, and vulnerabilities covered by The Hacker News.'
                },
                'AI Security': {
                    'url': 'https://news.google.com/rss/search?q=AI+cybersecurity+threats&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Emerging cybersecurity risks, threats, and attacks involving artificial intelligence.'
                },
                'Cyber Defense Policy': {
                    'url': 'https://news.google.com/rss/search?q=cyber+defense+policy+us+nato&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cyber defense strategies and doctrines from the US, NATO, and allied nations.'
                },
                'Insider Threats': {
                    'url': 'https://news.google.com/rss/search?q=insider+cybersecurity+threats&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Coverage of cybersecurity incidents and risks involving insiders and trusted employees.'
                },
                'Cyber Law and Norms': {
                    'url': 'https://news.google.com/rss/search?q=cyber+law+international+norms&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Legal frameworks and international norms shaping cyberspace governance and operations.'
                },
                'Military Cyber Innovation': {
                    'url': 'https://news.google.com/rss/search?q=military+cyber+technology+DARPA&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Advances in cyber technologies driven by military research, including DARPA projects.'
                },
                'Space Cyber Warfare': {
                    'url': 'https://news.google.com/rss/search?q=space+cyber+warfare&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cybersecurity risks related to space-based assets and cyber warfare in outer space.'
                },
                'IoT and Smart Cities Security': {
                    'url': 'https://news.google.com/rss/search?q=smart+city+IoT+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cyber risks affecting Internet of Things devices and smart city infrastructure.'
                },
                'Geopolitical Cyber Flashpoints': {
                    'url': 'https://news.google.com/rss/search?q=Taiwan+South+China+Sea+cyber+conflict&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cyber escalations in key geopolitical hotspots such as Taiwan and the South China Sea.'
                },
                'APT Tradecraft Evolution': {
                    'url': 'https://news.google.com/rss/search?q=APT+hacker+tactics+cybersecurity&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Monitoring how advanced persistent threats are evolving their tactics, techniques, and procedures.'
                },
                'Information Warfare and PsyOps': {
                    'url': 'https://news.google.com/rss/search?q=information+warfare+disinformation+psyops&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'News on influence operations, disinformation campaigns, and psychological operations online.'
                },
                'Supply Chain Cybersecurity': {
                    'url': 'https://news.google.com/rss/search?q=cyber+supply+chain+attack&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Coverage of cybersecurity risks and attacks targeting software and hardware supply chains.'
                },
                'Post-Quantum Cryptography': {
                    'url': 'https://news.google.com/rss/search?q=post-quantum+cryptography&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Advancements and risks associated with cryptography in the post-quantum computing era.'
                },
                'Global Perspectives': {
                    'url': 'https://news.google.com/rss/search?q=global+cybersecurity+threats&hl=en-US&gl=US&ceid=US:en',
                    'desc': 'Cybersecurity threats from a global perspective, including non-Western viewpoints.'
                }
            }
            
            def clean_html(text):
                # Use BeautifulSoup for better HTML parsing
                if not text:
                    return ""
                soup = BeautifulSoup(text, 'html.parser')
                clean_text = soup.get_text()
                
                # Replace HTML entities
                clean_text = html.unescape(clean_text)
                
                # Remove extra whitespace
                clean_text = re.sub(r'\s+', ' ', clean_text).strip()
                
                return clean_text
            
            def format_date(date_str):
                try:
                    dt = date_parser.parse(date_str)
                    return dt.strftime("%b %d, %Y")
                except:
                    return ""
            
            def extract_source_from_title(title):
                # Try to extract source from common patterns like "Title - Source" or "Title | Source"
                for separator in [' - ', ' | ', ': ']:
                    if separator in title:
                        parts = title.split(separator, 1)
                        if len(parts) > 1:
                            return parts[0], parts[1]
                
                return title, ""
            
            # Start README content
            current_time = datetime.datetime.utcnow()
            readme = [
                '# 🛡️ Cybersecurity News Tracker',
                '',
                f'Last updated: {current_time.strftime("%B %d, %Y at %H:%M UTC")}',
                '',
                '> Automatically aggregated cybersecurity news from various sources.',
                '',
                '## 📋 Table of Contents',
                ''
            ]
            
            # Add table of contents
            for topic in topics:
                topic_anchor = topic.lower().replace(' ', '-')
                readme.append(f'- [🔍 {topic}](#{topic_anchor})')
            
            readme.append('')
            readme.append('---')
            readme.append('')
            
            # Process each topic
            for topic, details in topics.items():
                print(f'Processing {topic}')
                
                url = details['url']
                desc = details['desc']
                
                # Add topic header with emoji based on topic
                emoji = '🔒'  # Default emoji
                if 'critical infrastructure' in topic.lower():
                    emoji = '🏭'
                elif 'china' in topic.lower():
                    emoji = '🇨🇳'
                elif 'russian' in topic.lower():
                    emoji = '🇷🇺'
                elif 'iranian' in topic.lower():
                    emoji = '🇮🇷'
                elif 'north korean' in topic.lower():
                    emoji = '🇰🇵'
                elif 'cve' in topic.lower():
                    emoji = '🔓'
                elif 'exploit' in topic.lower():
                    emoji = '💥'
                elif 'satellite' in topic.lower():
                    emoji = '🛰️'
                elif 'drone' in topic.lower():
                    emoji = '🛸'
                elif 'asymmetric' in topic.lower():
                    emoji = '⚔️'
                elif 'financial times' in topic.lower():
                    emoji = '📊'
                elif 'politico' in topic.lower():
                    emoji = '🏛️'
                elif 'wired' in topic.lower():
                    emoji = '🔌'
                elif 'reuters' in topic.lower():
                    emoji = '📰'
                elif 'wall street journal' in topic.lower() or 'wsj' in topic.lower():
                    emoji = '💼'
                elif 'gbhackers' in topic.lower():
                    emoji = '👨‍💻'
                elif 'record' in topic.lower():
                    emoji = '🎯'
                elif 'hacker news' in topic.lower():
                    emoji = '💻'
                elif 'ai security' in topic.lower():
                    emoji = '🤖'
                elif 'cyber defense policy' in topic.lower():
                    emoji = '🛡️'
                elif 'insider threats' in topic.lower():
                    emoji = '🔍'
                elif 'cyber law' in topic.lower():
                    emoji = '⚖️'
                elif 'military cyber' in topic.lower():
                    emoji = '🪖'
                elif 'space cyber' in topic.lower():
                    emoji = '🚀'
                elif 'iot' in topic.lower() or 'smart cities' in topic.lower():
                    emoji = '🏙️'
                elif 'geopolitical' in topic.lower():
                    emoji = '🗺️'
                elif 'apt' in topic.lower():
                    emoji = '🎭'
                elif 'information warfare' in topic.lower() or 'psyops' in topic.lower():
                    emoji = '📣'
                elif 'supply chain' in topic.lower():
                    emoji = '🔗'
                elif 'post-quantum' in topic.lower():
                    emoji = '🧮'
                elif 'attack' in topic.lower():
                    emoji = '⚠️'
                elif 'crypto' in topic.lower():
                    emoji = '💰'
                elif 'quantum' in topic.lower():
                    emoji = '⚛️'
                elif 'espionage' in topic.lower():
                    emoji = '🕵️'
                elif 'global' in topic.lower():
                    emoji = '🌐'
                
                topic_anchor = topic.lower().replace(' ', '-')
                readme.append(f'<h2 id="{topic_anchor}">{emoji} {topic}</h2>')
                readme.append('')
                readme.append(f'_{desc}_')
                readme.append('')
                
                try:
                    # Parse the feed
                    feed = feedparser.parse(url)
                    
                    # Limit to 5 entries
                    entries = feed.entries[:5]
                    
                    if entries:
                        # Add a table for better organization
                        readme.append('<table>')
                        readme.append('<tr><th>Source</th><th>Title</th><th>Summary</th></tr>')
                        
                        seen_articles = set()  # To avoid duplicate articles
                        
                        for entry in entries:
                            # Skip if we've seen this article already (common with aggregators)
                            article_id = entry.link
                            if article_id in seen_articles:
                                continue
                            
                            seen_articles.add(article_id)
                            
                            # Get title and link
                            title = entry.title
                            link = entry.link
                            
                            # Extract source from title if possible
                            article_title, source_from_title = extract_source_from_title(title)
                            
                            # Get source if available
                            source = source_from_title
                            if not source and hasattr(entry, 'source') and hasattr(entry.source, 'title'):
                                source = entry.source.title
                            
                            # Get description/summary
                            description = ""
                            if hasattr(entry, 'description'):
                                description = entry.description
                            elif hasattr(entry, 'summary'):
                                description = entry.summary
                            
                            # Get publication date
                            pub_date = ""
                            if hasattr(entry, 'published'):
                                pub_date = format_date(entry.published)
                            elif hasattr(entry, 'pubDate'):
                                pub_date = format_date(entry.pubDate)
                            
                            # Clean up description
                            description = clean_html(description)
                            
                            # Check if description is too similar to title
                            if description == article_title or not description:
                                description = "No summary available."
                            
                            # Limit description length
                            if len(description) > 180:
                                cutoff = min(180, len(description))
                                period_pos = description.rfind('. ', 0, cutoff)
                                comma_pos = description.rfind(', ', 0, cutoff)
                                
                                if period_pos > 0:
                                    description = description[:period_pos+1]
                                elif comma_pos > 0:
                                    description = description[:comma_pos+1]
                                else:
                                    description = description[:cutoff] + '...'
                            
                            # Add entry to README as a table row
                            readme.append('<tr>')
                            readme.append(f'<td><strong>{source}</strong>{" " + pub_date if pub_date else ""}</td>')
                            readme.append(f'<td><a href="{link}">{article_title}</a></td>')
                            readme.append(f'<td>{description}</td>')
                            readme.append('</tr>')
                        
                        readme.append('</table>')
                        readme.append('')
                    else:
                        readme.append('*No recent articles found*')
                        readme.append('')
                except Exception as e:
                    readme.append(f'*Error processing feed: {str(e)}*')
                    readme.append('')
                
                # Add a divider between topics
                readme.append('<hr>')
                readme.append('')
            
            # Add footer
            readme.append('')
            readme.append('---')
            readme.append('')
            readme.append('*Automatically updated every 6 hours via GitHub Actions*')
            readme.append('')
            readme.append('<div align="center">Maintained by <a href="https://github.com/delldevmann">@delldevmann</a></div>')
            
            # Write to file
            with open('README.md', 'w', encoding='utf-8') as f:
                f.write('\n'.join(readme))
            
            print('README updated successfully!')

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "Update cybersecurity news: $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin main
